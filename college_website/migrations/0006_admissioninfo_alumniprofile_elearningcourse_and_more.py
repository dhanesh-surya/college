# Generated by Django 5.0.7 on 2025-08-24 06:23

import django_ckeditor_5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('college_website', '0005_galleryphoto_alt_text_alter_galleryphoto_caption_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('admission_type', models.CharField(choices=[('undergraduate', 'Undergraduate'), ('postgraduate', 'Postgraduate'), ('diploma', 'Diploma'), ('certificate', 'Certificate')], max_length=20)),
                ('description', models.TextField()),
                ('eligibility_criteria', django_ckeditor_5.fields.CKEditor5Field()),
                ('application_process', django_ckeditor_5.fields.CKEditor5Field()),
                ('required_documents', django_ckeditor_5.fields.CKEditor5Field()),
                ('fees_structure', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('important_dates', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('contact_info', models.TextField(blank=True)),
                ('application_form', models.FileField(blank=True, upload_to='admissions/forms/')),
                ('brochure', models.FileField(blank=True, upload_to='admissions/brochures/')),
                ('is_active', models.BooleanField(default=True)),
                ('ordering', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Admission Information',
                'verbose_name_plural': 'Admission Information',
                'ordering': ['ordering', 'title'],
            },
        ),
        migrations.CreateModel(
            name='AlumniProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('graduation_year', models.PositiveIntegerField()),
                ('course', models.CharField(max_length=100)),
                ('current_position', models.CharField(max_length=200)),
                ('current_company', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('linkedin_profile', models.URLField(blank=True)),
                ('bio', models.TextField()),
                ('achievements', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('career_journey', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('advice_to_students', models.TextField(blank=True)),
                ('profile_photo', models.ImageField(blank=True, upload_to='alumni/photos/')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('willing_to_mentor', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Alumni Profile',
                'verbose_name_plural': 'Alumni Profiles',
                'ordering': ['-graduation_year', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ELearningCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('course_code', models.CharField(max_length=20, unique=True)),
                ('instructor', models.CharField(max_length=100)),
                ('duration_hours', models.PositiveIntegerField(help_text='Course duration in hours')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('prerequisites', models.TextField(blank=True)),
                ('learning_outcomes', django_ckeditor_5.fields.CKEditor5Field()),
                ('course_content', django_ckeditor_5.fields.CKEditor5Field()),
                ('course_materials', models.FileField(blank=True, upload_to='elearning/materials/')),
                ('video_lectures', models.URLField(blank=True, help_text='Link to video lectures')),
                ('assignments', models.FileField(blank=True, upload_to='elearning/assignments/')),
                ('quiz_link', models.URLField(blank=True)),
                ('certificate_available', models.BooleanField(default=False)),
                ('enrollment_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('max_enrollment', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'E-Learning Course',
                'verbose_name_plural': 'E-Learning Courses',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('result_type', models.CharField(choices=[('semester', 'Semester Exam'), ('annual', 'Annual Exam'), ('entrance', 'Entrance Exam'), ('supplementary', 'Supplementary Exam')], max_length=20)),
                ('exam_date', models.DateField()),
                ('result_date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('result_file', models.FileField(blank=True, upload_to='results/')),
                ('result_link', models.URLField(blank=True, help_text='External result portal link')),
                ('instructions', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Exam Result',
                'verbose_name_plural': 'Exam Results',
                'ordering': ['-result_date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='LibraryResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('resource_type', models.CharField(choices=[('book', 'Book'), ('journal', 'Journal'), ('ebook', 'E-Book'), ('database', 'Database'), ('thesis', 'Thesis'), ('magazine', 'Magazine'), ('newspaper', 'Newspaper')], max_length=20)),
                ('author', models.CharField(blank=True, max_length=200)),
                ('isbn', models.CharField(blank=True, max_length=20, verbose_name='ISBN/ISSN')),
                ('publisher', models.CharField(blank=True, max_length=200)),
                ('publication_year', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('subject_category', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, help_text='Shelf/Section location', max_length=100)),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('issued', 'Issued'), ('reserved', 'Reserved'), ('maintenance', 'Under Maintenance')], default='available', max_length=20)),
                ('digital_copy', models.FileField(blank=True, upload_to='library/digital/')),
                ('external_link', models.URLField(blank=True)),
                ('cover_image', models.ImageField(blank=True, upload_to='library/covers/')),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Library Resource',
                'verbose_name_plural': 'Library Resources',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='PlacementRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_name', models.CharField(max_length=100)),
                ('student_id', models.CharField(blank=True, max_length=20)),
                ('course', models.CharField(max_length=100)),
                ('graduation_year', models.PositiveIntegerField()),
                ('company_name', models.CharField(max_length=200)),
                ('job_title', models.CharField(max_length=100)),
                ('package_offered', models.DecimalField(decimal_places=2, help_text='Annual package in lakhs', max_digits=10)),
                ('placement_date', models.DateField()),
                ('company_location', models.CharField(blank=True, max_length=100)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('internship', 'Internship'), ('contract', 'Contract')], default='full_time', max_length=20)),
                ('student_photo', models.ImageField(blank=True, upload_to='placements/students/')),
                ('company_logo', models.ImageField(blank=True, upload_to='placements/companies/')),
                ('testimonial', models.TextField(blank=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Placement Record',
                'verbose_name_plural': 'Placement Records',
                'ordering': ['-placement_date', 'student_name'],
            },
        ),
        migrations.RemoveField(
            model_name='galleryphoto',
            name='alt_text',
        ),
        migrations.AlterField(
            model_name='galleryphoto',
            name='caption',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='galleryphoto',
            name='title',
            field=models.CharField(blank=True, max_length=200),
        ),
    ]
