# Generated by Django 5.0.7

from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CollegeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='Chaitanya Science and Arts College', max_length=200)),
                ('establishment_year', models.IntegerField(default=2001)),
                ('affiliation', models.CharField(default='Shaheed Nandkumar Patel Vishwavidyalaya, Raigarh', max_length=300)),
                ('address_line', models.TextField(default='Pamgarh, Janjgir Champa, Chhattisgarh, India, 495554')),
                ('email', models.EmailField(default='chaitanyapamgarh@gmail.com', max_length=254)),
                ('phone', models.CharField(default='+91-9425540666', max_length=20)),
                ('mission_statement_short', models.CharField(max_length=180)),
                ('mission_statement_long', models.TextField()),
                ('founder_name', models.CharField(default='Mr Veerendra Tiwari', max_length=100)),
                ('founder_message', models.TextField()),
                ('principal_name', models.CharField(default='Dr Vinod Kumar Gupta', max_length=100)),
                ('principal_message', models.TextField()),
                ('courses_count', models.CharField(default='18+', max_length=10)),
                ('students_count', models.CharField(default='8000+', max_length=10)),
                ('faculty_staff_count', models.CharField(default='50+', max_length=10)),
                ('years_of_excellence', models.CharField(default='25+', max_length=10)),
                ('naac_grade', models.CharField(default='NAAC GRADE A AWARD', max_length=50)),
                ('iic_rating', models.CharField(default='3 Star Rating IIC', max_length=50)),
                ('facebook_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('logo', models.ImageField(blank=True, upload_to='college/')),
                ('hero_image', models.ImageField(blank=True, upload_to='college/')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'College Information',
                'verbose_name_plural': 'College Information',
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('comments', models.TextField()),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved')], default='new', max_length=20)),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('date', models.DateField()),
                ('time', models.TimeField(blank=True, null=True)),
                ('location', models.CharField(default='College Auditorium', max_length=200)),
                ('type', models.CharField(choices=[('workshop', 'Workshop/Seminar'), ('celebration', 'Day Celebration'), ('foundation', 'Foundation Day'), ('other', 'Other')], max_length=20)),
                ('banner_image', models.ImageField(blank=True, upload_to='events/')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ImportantLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('type', models.CharField(choices=[('important', 'Important'), ('quick', 'Quick')], max_length=20)),
                ('icon_class', models.CharField(blank=True, help_text='CSS icon class', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('ordering', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['type', 'ordering', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ordering', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['ordering', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('content', django_ckeditor_5.fields.CKEditor5Field()),
                ('publish_date', models.DateField(auto_now_add=True)),
                ('category', models.CharField(choices=[('exam', 'Exam'), ('admission', 'Admission'), ('policy', 'Policy'), ('general', 'General'), ('university', 'University Notices')], max_length=20)),
                ('attachment', models.FileField(blank=True, upload_to='notices/')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('banner_image', models.ImageField(blank=True, upload_to='pages/')),
                ('show_banner', models.BooleanField(default=True)),
                ('show_sidebar', models.BooleanField(default=True)),
                ('enable_search_in_navbar', models.BooleanField(default=True)),
                ('meta_title', models.CharField(blank=True, max_length=60)),
                ('meta_description', models.TextField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('template_variant', models.CharField(choices=[('default', 'Default'), ('wide', 'Wide Layout'), ('landing', 'Landing Page')], default='default', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('discipline', models.CharField(choices=[('arts', 'Arts'), ('science', 'Science'), ('commerce', 'Commerce'), ('management', 'Management')], max_length=20)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('duration', models.CharField(blank=True, max_length=50)),
                ('brochure', models.FileField(blank=True, upload_to='programs/brochures/')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['discipline', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SocialInitiative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('cover_image', models.ImageField(blank=True, upload_to='social_initiatives/')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentTestimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_name', models.CharField(max_length=100)),
                ('program_studied', models.CharField(max_length=100)),
                ('feedback_text', models.TextField()),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('photo', models.ImageField(blank=True, upload_to='testimonials/')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-rating', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlockDownloadList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='download_blocks', to='college_website.page')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='BlockForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('form_type', models.CharField(choices=[('contact', 'Contact Form'), ('registration', 'Registration Form')], default='contact', max_length=20)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_blocks', to='college_website.page')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='BlockImageGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_blocks', to='college_website.page')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='BlockRichText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('body', django_ckeditor_5.fields.CKEditor5Field()),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rich_text_blocks', to='college_website.page')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='BlockTableHTML',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('html', models.TextField(help_text='HTML table code')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table_blocks', to='college_website.page')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='BlockVideoEmbed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('provider', models.CharField(choices=[('youtube', 'YouTube'), ('vimeo', 'Vimeo'), ('other', 'Other')], default='youtube', max_length=20)),
                ('video_url', models.URLField()),
                ('embed_code', models.TextField(blank=True, help_text='Optional custom embed code')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_blocks', to='college_website.page')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='DownloadFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='downloads/')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('ordering', models.IntegerField(default=0)),
                ('download_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='college_website.blockdownloadlist')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('ordering', models.IntegerField(default=0)),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='college_website.blockimagegallery')),
            ],
            options={
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True)),
                ('path_type', models.CharField(choices=[('internal', 'Internal Page'), ('external', 'External URL')], default='internal', max_length=20)),
                ('external_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ordering', models.IntegerField(default=0)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='college_website.menu')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='college_website.page')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='college_website.menuitem')),
            ],
            options={
                'ordering': ['ordering', 'title'],
                'unique_together': {('menu', 'slug')},
            },
        ),
    ]
