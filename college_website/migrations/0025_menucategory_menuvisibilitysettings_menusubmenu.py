# Generated by Django 5.0.7 on 2025-09-03 17:00

import colorfield.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('college_website', '0024_examtimetable_examtimetableweek_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text="Menu category name (e.g., 'Home', 'About', 'Academics')", max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='URL-friendly identifier', max_length=100, unique=True)),
                ('icon_class', models.CharField(blank=True, help_text="Font Awesome icon class (e.g., 'fas fa-home')", max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order in navigation')),
                ('is_active', models.BooleanField(default=True, help_text='Show this menu category')),
                ('is_featured', models.BooleanField(default=False, help_text='Mark as featured menu')),
                ('text_color', colorfield.fields.ColorField(default='#374151', help_text='Text color for the menu', image_field=None, max_length=25, samples=None)),
                ('hover_color', colorfield.fields.ColorField(default='#1f2937', help_text='Hover color for the menu', image_field=None, max_length=25, samples=None)),
            ],
            options={
                'verbose_name': 'Menu Category',
                'verbose_name_plural': 'Menu Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MenuVisibilitySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='Default Menu Settings', help_text='Settings configuration name', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Use these settings')),
                ('show_research_menu', models.BooleanField(default=True, help_text='Show Research menu')),
                ('show_placement_menu', models.BooleanField(default=True, help_text='Show Placement menu')),
                ('show_alumni_menu', models.BooleanField(default=True, help_text='Show Alumni menu')),
                ('show_events_menu', models.BooleanField(default=True, help_text='Show Events menu')),
                ('show_exam_timetable', models.BooleanField(default=True, help_text='Show Exam Timetable')),
                ('show_exam_revaluation', models.BooleanField(default=True, help_text='Show Exam Revaluation')),
                ('show_exam_question_papers', models.BooleanField(default=True, help_text='Show Question Papers')),
                ('show_exam_rules', models.BooleanField(default=True, help_text='Show Exam Rules')),
                ('show_student_portal', models.BooleanField(default=True, help_text='Show Student Portal')),
                ('show_sports_cultural', models.BooleanField(default=True, help_text='Show Sports & Cultural')),
                ('show_nss_ncc', models.BooleanField(default=True, help_text='Show NSS, NCC & Clubs')),
                ('show_research_centers', models.BooleanField(default=True, help_text='Show Research Centers')),
                ('show_publications', models.BooleanField(default=True, help_text='Show Publications')),
                ('show_patents_projects', models.BooleanField(default=True, help_text='Show Patents & Projects')),
            ],
            options={
                'verbose_name': 'Menu Visibility Settings',
                'verbose_name_plural': 'Menu Visibility Settings',
            },
        ),
        migrations.CreateModel(
            name='MenuSubmenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Submenu item name', max_length=100)),
                ('url', models.CharField(help_text='URL or path (e.g., \'/about/\', \'{% url "about" %}\')', max_length=200)),
                ('icon_class', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order within category')),
                ('is_active', models.BooleanField(default=True, help_text='Show this submenu item')),
                ('is_featured', models.BooleanField(default=False, help_text='Mark as featured submenu')),
                ('group_header', models.CharField(blank=True, help_text="Group header text (e.g., 'Institution', 'Leadership')", max_length=100)),
                ('show_divider', models.BooleanField(default=False, help_text='Show divider after this item')),
                ('text_color', colorfield.fields.ColorField(default='#6b7280', help_text='Text color for the submenu', image_field=None, max_length=25, samples=None)),
                ('hover_color', colorfield.fields.ColorField(default='#374151', help_text='Hover color for the submenu', image_field=None, max_length=25, samples=None)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submenus', to='college_website.menucategory')),
            ],
            options={
                'verbose_name': 'Menu Submenu',
                'verbose_name_plural': 'Menu Submenus',
                'ordering': ['category__order', 'category__name', 'order', 'name'],
                'unique_together': {('category', 'name')},
            },
        ),
    ]
