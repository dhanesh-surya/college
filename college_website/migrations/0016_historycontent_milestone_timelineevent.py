# Generated by Django 5.0.7 on 2025-08-31 16:27

import django.db.models.deletion
import django_ckeditor_5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('college_website', '0015_visionmissioncontent_corevalue'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoryContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='College History Content', help_text='Name for this history content set', max_length=100)),
                ('hero_title', models.CharField(default='Our History', help_text='Main title for the history page', max_length=200)),
                ('hero_subtitle', models.TextField(default='A journey through time showcasing our commitment to educational excellence and community development', help_text='Subtitle text for the hero section')),
                ('hero_badge_text', models.CharField(default='Our Heritage', help_text='Badge text in hero section', max_length=50)),
                ('foundation_title', models.CharField(default='Foundation Story', help_text='Title for foundation section', max_length=100)),
                ('foundation_content', django_ckeditor_5.fields.CKEditor5Field(help_text="Content describing the college's foundation and early history")),
                ('establishment_year', models.PositiveIntegerField(default=1985, help_text='Year the college was established')),
                ('faculty_count', models.PositiveIntegerField(default=50, help_text='Current number of faculty members')),
                ('alumni_count', models.PositiveIntegerField(default=5000, help_text='Total number of alumni')),
                ('accreditations', models.CharField(default='Multiple Accreditations', help_text='Summary of accreditations received', max_length=200)),
                ('timeline_title', models.CharField(default='Historical Timeline', help_text='Title for timeline section', max_length=100)),
                ('timeline_description', models.TextField(default="Key moments that shaped our institution's growth and development", help_text='Description for timeline section')),
                ('milestones_title', models.CharField(default='Major Milestones', help_text='Title for milestones section', max_length=100)),
                ('milestones_description', models.TextField(default='Celebrating our achievements and recognitions over the years', help_text='Description for milestones section')),
                ('legacy_title', models.CharField(default='Our Continuing Legacy', help_text='Title for legacy section', max_length=100)),
                ('legacy_content', models.TextField(default="As we look towards the future, we remain committed to our founding principles while embracing innovation and change. Our history is not just about the pastâ€”it's the foundation for an even brighter future.", help_text='Content for legacy section')),
                ('is_active', models.BooleanField(default=True, help_text='Set to active to display this content on the history page')),
            ],
            options={
                'verbose_name': 'History Content',
                'verbose_name_plural': 'History Contents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Milestone title', max_length=100)),
                ('description', models.TextField(help_text='Milestone description')),
                ('icon_class', models.CharField(default='fas fa-trophy', help_text='FontAwesome icon class (e.g., fas fa-medal)', max_length=50)),
                ('gradient_color', models.CharField(choices=[('yellow-orange', 'Yellow to Orange'), ('blue-indigo', 'Blue to Indigo'), ('purple-pink', 'Purple to Pink'), ('green-emerald', 'Green to Emerald'), ('teal-cyan', 'Teal to Cyan'), ('red-pink', 'Red to Pink'), ('orange-red', 'Orange to Red'), ('indigo-purple', 'Indigo to Purple')], default='yellow-orange', help_text='Gradient color scheme for the milestone card', max_length=20)),
                ('ordering', models.PositiveIntegerField(default=0, help_text='Order of display (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Include this milestone in the display')),
                ('history_content', models.ForeignKey(help_text='Associated history content', on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='college_website.historycontent')),
            ],
            options={
                'verbose_name': 'Milestone',
                'verbose_name_plural': 'Milestones',
                'ordering': ['ordering', 'title'],
            },
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField(help_text='Year of the event')),
                ('title', models.CharField(help_text='Event title', max_length=100)),
                ('description', models.TextField(help_text='Event description')),
                ('icon_class', models.CharField(default='fas fa-calendar', help_text='FontAwesome icon class (e.g., fas fa-seedling)', max_length=50)),
                ('gradient_color', models.CharField(choices=[('emerald-teal', 'Emerald to Teal'), ('blue-indigo', 'Blue to Indigo'), ('purple-pink', 'Purple to Pink'), ('orange-red', 'Orange to Red'), ('teal-cyan', 'Teal to Cyan'), ('indigo-purple', 'Indigo to Purple'), ('yellow-orange', 'Yellow to Orange'), ('green-emerald', 'Green to Emerald')], default='emerald-teal', help_text='Gradient color scheme for the event card', max_length=20)),
                ('ordering', models.PositiveIntegerField(default=0, help_text='Order of display (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Include this event in the timeline')),
                ('history_content', models.ForeignKey(help_text='Associated history content', on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='college_website.historycontent')),
            ],
            options={
                'verbose_name': 'Timeline Event',
                'verbose_name_plural': 'Timeline Events',
                'ordering': ['ordering', 'year'],
            },
        ),
    ]
