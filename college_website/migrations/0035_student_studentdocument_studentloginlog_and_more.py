# Generated by Django 5.0.7 on 2025-09-06 03:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('college_website', '0034_consultancyexpertise_consultancyinfo_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_id', models.CharField(db_index=True, help_text='Unique student ID', max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], max_length=1)),
                ('phone', models.CharField(max_length=15)),
                ('alternate_phone', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10)),
                ('country', models.CharField(default='India', max_length=100)),
                ('course', models.CharField(choices=[('btech-cse', 'B.Tech Computer Science'), ('btech-it', 'B.Tech Information Technology'), ('btech-ece', 'B.Tech Electronics & Communication'), ('btech-mech', 'B.Tech Mechanical Engineering'), ('btech-civil', 'B.Tech Civil Engineering'), ('btech-eee', 'B.Tech Electrical & Electronics'), ('mba', 'MBA'), ('mca', 'MCA'), ('bca', 'BCA'), ('bba', 'BBA'), ('bcom', 'B.Com'), ('bsc', 'B.Sc'), ('msc', 'M.Sc'), ('other', 'Other')], max_length=20)),
                ('year', models.CharField(choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year')], max_length=1)),
                ('batch', models.CharField(help_text='e.g., 2021-2025', max_length=10)),
                ('enrollment_number', models.CharField(blank=True, max_length=30)),
                ('roll_number', models.CharField(blank=True, max_length=20)),
                ('father_name', models.CharField(blank=True, max_length=100)),
                ('mother_name', models.CharField(blank=True, max_length=100)),
                ('guardian_phone', models.CharField(blank=True, max_length=15)),
                ('guardian_email', models.EmailField(blank=True, max_length=254)),
                ('profile_image', models.ImageField(blank=True, help_text='Profile photo', null=True, upload_to='students/profiles/')),
                ('is_active', models.BooleanField(default=True)),
                ('admission_date', models.DateField(blank=True, null=True)),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('newsletter_subscription', models.BooleanField(default=False)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['student_id', 'first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(choices=[('transcript', 'Academic Transcript'), ('certificate', 'Certificate'), ('id_proof', 'ID Proof'), ('address_proof', 'Address Proof'), ('photo', 'Passport Photo'), ('signature', 'Signature'), ('other', 'Other Document')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(help_text='Upload document file (PDF, JPG, PNG)', upload_to='students/documents/')),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='college_website.student')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Document',
                'verbose_name_plural': 'Student Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentLoginLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('browser', models.CharField(blank=True, max_length=100)),
                ('is_successful', models.BooleanField(default=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_logs', to='college_website.student')),
            ],
            options={
                'verbose_name': 'Student Login Log',
                'verbose_name_plural': 'Student Login Logs',
                'ordering': ['-login_time'],
            },
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['student_id'], name='college_web_student_b52e7f_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['course', 'year'], name='college_web_course_bf4e4a_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['is_active'], name='college_web_is_acti_5c4001_idx'),
        ),
        migrations.AddIndex(
            model_name='studentloginlog',
            index=models.Index(fields=['student', '-login_time'], name='college_web_student_d505d6_idx'),
        ),
        migrations.AddIndex(
            model_name='studentloginlog',
            index=models.Index(fields=['ip_address'], name='college_web_ip_addr_79d46e_idx'),
        ),
    ]
